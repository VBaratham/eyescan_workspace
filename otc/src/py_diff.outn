Only in ../Debug/py_scripts/: Vyassa_first_test_1d_20150608
Only in ../Debug/py_scripts/: Vyassa_first_test_1d_20150608.tar.gz
Only in ../Debug/py_scripts/: _central_error_plot.py
Only in ../Debug/py_scripts/: central_error_plot.py
Binary files /c/Users/LArTest/Desktop/eyescanOTC_20140907/otc/Debug/py_scripts/central_error_plot.pyc and ../Debug/py_scripts/central_error_plot.pyc differ
diff -bur /c/Users/LArTest/Desktop/eyescanOTC_20140907/otc/Debug/py_scripts/central_error_plot.py~ ../Debug/py_scripts/central_error_plot.py~
--- /c/Users/LArTest/Desktop/eyescanOTC_20140907/otc/Debug/py_scripts/central_error_plot.py~	Thu Jan 15 14:03:02 2015
+++ ../Debug/py_scripts/central_error_plot.py~	Thu Jan 15 15:04:29 2015
@@ -48,9 +48,8 @@
     center_errors = np.array( center_errors )
 
     bins = np.linspace(0, 256, 256)
-    if not any(center_errors[:,-1] != 0):
-        return
     pl.clf()
+    if any(center_errors[:,-1] != 0):
     pl.hist( center_errors[center_errors[:, -1] != 0][:, -1], bins=bins )
     pl.xlim(0,256)
     pl.title(title)
diff -bur /c/Users/LArTest/Desktop/eyescanOTC_20140907/otc/Debug/py_scripts/run_es_host_pc.py ../Debug/py_scripts/run_es_host_pc.py
--- /c/Users/LArTest/Desktop/eyescanOTC_20140907/otc/Debug/py_scripts/run_es_host_pc.py	Mon Jan 12 14:01:34 2015
+++ ../Debug/py_scripts/run_es_host_pc.py	Wed Jun 10 18:00:54 2015
@@ -78,14 +78,19 @@
 
 
 
-def run_es_host(horz_step = 1, vert_step = 8, max_prescale = 8, datawidth = 32, lpm_mode = 0, rate = 32) :
+def run_es_host(horz_step = 1, vert_step = 8, max_prescale = 8, datawidth = 32, lpm_mode = 0, rate = 32, inactive_channels=None) :
     if rate not in valid_rates or datawidth not in valid_widths :
         return 0
 
-    for idx in range(0, NUMBER_OF_CHANNELS) :
+    for idx in range(NUMBER_OF_CHANNELS) :
         print 'Writing settings to channel %d' % idx
         send_command('esinit %s %d %d %d %d %d %d"' % (idx, max_prescale, horz_step, datawidth, vert_step, lpm_mode, rate))
 
+    for i in (inactive_channels or []):
+        print 'Disabling channel %d' % i
+        send_command('esdisable %d' %i)
+    print 'Done disabling channels'
+
     fdbg = open('debug_start.output', 'w')
     fdbg.write(send_command('dbgeyescan'))
     fdbg.write(send_command('dbgeyescan 0'))
@@ -127,10 +132,10 @@
 
             continue
         else :
+            print 'SCAN IS DONE'
             dumpf = open('all.dump', 'w')
             send_command('esread all', timeout = 60, outfile = dumpf)
             dumpf.close()
-            print 'SCAN IS DONE'
             send_command('esdone')
             break
 
@@ -198,7 +203,10 @@
         print 'pixel %d %d %d %d %d %d %d' % (self.curr_pixel, self.horz_offset, self.vert_offset, self.error_count, self.sample_count, self.prescale, self.ut_sign)
 
 
-def process_es_output(horz_step = 1, vert_step = 8, max_prescale = 8, datawidth = 32, lpm_mode = 0, rate = 40, dumpfile = 'all.dump') :
+def process_es_output(horz_step = 1, vert_step = 8, max_prescale = 8, datawidth = 32, lpm_mode = 0, rate = 40, inactive_channels = None, dumpfile = 'all.dump') :
+    
+    if inactive_channels is None:
+        inactive_channels = []
 
     all_lanes = {}
     for lane in range(0, NUMBER_OF_CHANNELS) :
@@ -217,8 +225,13 @@
     asciif = open('ascii_eye.txt', 'w')
     cerrf = open('center_error.txt', 'w')
     for lane in range(0, NUMBER_OF_CHANNELS) :
+
         asciif.write('CHANNEL %d\n' % lane)
 
+        if lane in inactive_channels:
+            cerrf.write("%s 0 -1 0\n" % lane)
+            continue
+
         idx = 0
 
         csvf = open('Ch%d.csv' % lane, 'w')
@@ -283,6 +296,7 @@
                 csvf.write("%d,NA,NA,NA,NA,%d,%d,NA,NA,NA,%.2E\n" % (idx, vv, hv, ber))
                 idx += 1
             asciif.write('\n\n')
+        # import pdb; pdb.set_trace()
         csvf.close()
         cerrf.write('%d %d %d %s\n' % (lane, cerr, tsamp, float(cerr)/float(tsamp)))
     asciif.close()
Binary files /c/Users/LArTest/Desktop/eyescanOTC_20140907/otc/Debug/py_scripts/run_es_host_pc.pyc and ../Debug/py_scripts/run_es_host_pc.pyc differ
Only in ../Debug/py_scripts/: run_es_host_pc.py~
diff -bur /c/Users/LArTest/Desktop/eyescanOTC_20140907/otc/Debug/py_scripts/run_eyescan.py ../Debug/py_scripts/run_eyescan.py
--- /c/Users/LArTest/Desktop/eyescanOTC_20140907/otc/Debug/py_scripts/run_eyescan.py	Thu Jan 15 15:54:15 2015
+++ ../Debug/py_scripts/run_eyescan.py	Thu Jun 11 11:49:25 2015
@@ -13,12 +13,15 @@
 USE_PYTHON_CONTROLLER = True
 IS_THIS_WINDOWS=True
 
+INACTIVE_CHANNELS = [4, 5, 6] # Make this a script param? If it's worthwhile
+
 def run_command(command) :
     ''' wrapper around os.system '''
     if TURN_ON_COMMANDS :
-        os.system(command)
+        return os.system(command)
     else :
         print command
+        return 0
 
 def run_eye_scan(label, scan_type, scan_rate = 32, max_prescale = 8, data_width = 40, lpm_mode = 0) :
     '''
@@ -52,8 +55,8 @@
         if not os.path.exists('%s/%s' % (PWD, SAMP_NAME)):
             os.makedirs('%s/%s' % (PWD, SAMP_NAME))
         os.chdir('%s/%s' % (PWD, SAMP_NAME))
-        run_es_host(horz_step, vert_step, max_prescale, data_width, lpm_mode, scan_rate)
-        process_es_output(horz_step, vert_step, max_prescale, data_width, lpm_mode, scan_rate)
+        run_es_host(horz_step, vert_step, max_prescale, data_width, lpm_mode, scan_rate, INACTIVE_CHANNELS)
+        process_es_output(horz_step, vert_step, max_prescale, data_width, lpm_mode, scan_rate, INACTIVE_CHANNELS)
 
     run_command('tar zcvf %s.tar.gz *.dump *.csv *.output *.txt' % (SAMP_NAME))
     run_command('rm *.dump *.csv *.txt *.output')
@@ -89,7 +92,6 @@
     central_error_plot.central_error_plot(fname = 'center_error.txt', title = 'Central BER')
     central_error_plot.central_error_frequency_plot(fname = 'all.dump', title = 'Central Bit Error Frequency')
     gl = glob.glob('Ch*.csv')
-    nf = len(gl)
     for fn in gl :
         if scan_type == 1 :
             import bathtub_plot
@@ -115,11 +117,14 @@
         run_command('sed -i \'s:TYPE:Bathtub:g\' %s/%s.tex' % (dn, dn))
     elif scan_type == 2 :
         run_command('sed -i \'s:TYPE:Eyescan:g\' %s/%s.tex' % (dn, dn))
-    for idx in range(0, nf) :
+    for idx in range(48) :
         if not fn2 :
-            run_command('mv Ch%d.csv.pdf %s/%s_Ch%d.pdf' % (idx, dn, dn, idx))
+            mv_success = run_command('mv Ch%d.csv.pdf %s/%s_Ch%d.pdf' % (idx, dn, dn, idx))
         else :
-            run_command('mv Ch%d.csvCh%d.csv.pdf %s/%s_Ch%d.pdf' % (idx, idx, dn, dn, idx))
+            mv_success = run_command('mv Ch%d.csvCh%d.csv.pdf %s/%s_Ch%d.pdf' % (idx, idx, dn, dn, idx))
+        if mv_success != 0:
+            print "No data for channel %s, removing from pdf" % idx
+            run_command('sed -i /Ch%s.pdf/d %s/%s.tex' % (idx, dn, dn))
     os.chdir('%s' % dn)
     run_command('pdflatex %s.tex' % dn)
     run_command('pdflatex %s.tex' % dn)
diff -bur /c/Users/LArTest/Desktop/eyescanOTC_20140907/otc/Debug/py_scripts/run_eyescan.py~ ../Debug/py_scripts/run_eyescan.py~
--- /c/Users/LArTest/Desktop/eyescanOTC_20140907/otc/Debug/py_scripts/run_eyescan.py~	Thu Jan 15 15:30:34 2015
+++ ../Debug/py_scripts/run_eyescan.py~	Wed Jun 10 17:11:45 2015
@@ -13,12 +13,15 @@
 USE_PYTHON_CONTROLLER = True
 IS_THIS_WINDOWS=True
 
+INACTIVE_CHANNELS = [4, 5, 6] # Make this a script param? If it's worthwhile
+
 def run_command(command) :
     ''' wrapper around os.system '''
     if TURN_ON_COMMANDS :
-        os.system(command)
+        return os.system(command)
     else :
         print command
+        return 0
 
 def run_eye_scan(label, scan_type, scan_rate = 32, max_prescale = 8, data_width = 40, lpm_mode = 0) :
     '''
@@ -49,10 +52,11 @@
     else :
         from run_es_host_pc import run_es_host, process_es_output
 
+        if not os.path.exists('%s/%s' % (PWD, SAMP_NAME)):
         os.makedirs('%s/%s' % (PWD, SAMP_NAME))
         os.chdir('%s/%s' % (PWD, SAMP_NAME))
-        run_es_host(horz_step, vert_step, max_prescale, data_width, lpm_mode, scan_rate)
-        process_es_output(horz_step, vert_step, max_prescale, data_width, lpm_mode, scan_rate)
+        run_es_host(horz_step, vert_step, max_prescale, data_width, lpm_mode, scan_rate, INACTIVE_CHANNELS)
+        process_es_output(horz_step, vert_step, max_prescale, data_width, lpm_mode, scan_rate, INACTIVE_CHANNELS)
 
     run_command('tar zcvf %s.tar.gz *.dump *.csv *.output *.txt' % (SAMP_NAME))
     run_command('rm *.dump *.csv *.txt *.output')
@@ -72,11 +76,13 @@
         dn2 = fn2.replace('.tar.gz', '').split('/')[-1]
         afn2 = os.path.relpath(fn2)
         run_command('rm -rf %s' % dn2)
+        if not os.path.exists('%s' % dn2):
         os.makedirs('%s' % dn2)
         os.chdir(dn2)
         run_command('tar zxvf ../%s' % afn2)
         os.chdir('../')
     run_command('rm -rf %s' % dn)
+    if not os.path.exists('%s' % dn):
     os.makedirs('%s' % dn)
     os.chdir(dn)
     run_command('tar zxvf ../%s' % afn)
@@ -86,7 +92,6 @@
     central_error_plot.central_error_plot(fname = 'center_error.txt', title = 'Central BER')
     central_error_plot.central_error_frequency_plot(fname = 'all.dump', title = 'Central Bit Error Frequency')
     gl = glob.glob('Ch*.csv')
-    nf = len(gl)
     for fn in gl :
         if scan_type == 1 :
             import bathtub_plot
@@ -112,7 +117,7 @@
         run_command('sed -i \'s:TYPE:Bathtub:g\' %s/%s.tex' % (dn, dn))
     elif scan_type == 2 :
         run_command('sed -i \'s:TYPE:Eyescan:g\' %s/%s.tex' % (dn, dn))
-    for idx in range(0, nf) :
+    for idx in range(48) :
         if not fn2 :
             run_command('mv Ch%d.csv.pdf %s/%s_Ch%d.pdf' % (idx, dn, dn, idx))
         else :
Only in ../Debug/py_scripts/: shell.py
Only in ../Debug/py_scripts/: shell.py~
